{"version":3,"sources":["components/TaskFormAdd.js","components/TaskItem.js","components/TaskList.js","components/Search.js","components/Sort.js","components/SearchnSort.js","components/AddEvent.js","App.js","serviceWorker.js","index.js"],"names":["TaskFormAdd","props","onHandleChange","e","target","name","value","type","checked","setState","onHandleClose","isCloseForm","onSubmit","preventDefault","onAddObj","state","onClose","onClear","status","id","this","taskEdit","nextProps","className","onClick","onChange","Component","TaskItem","onUpdateStatus","tasks","onDeleteStatus","onEdit","index","TaskList","onFilter","filterName","filterStatus","element","map","task","key","Search","onSearch","console","log","onBtnSearch","keyword","placeholder","Sort","sortBy","sortValue","onSort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","SearchnSort","AddEvent","onOpenEvent","isActiveEvent","App","onToggle","isActive","onShowForm","onAdd","data","generateID","push","findIndex","localStorage","setItem","JSON","stringify","elmtTask","result","forEach","_","splice","filter","toLowerCase","a","getItem","parse","Math","random","toString","substring","s4","indexOf","sort","b","elmTask","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2bbfe503.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TaskFormAdd extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id : '',// do taskEdit có thêm thuộc tính ID\r\n      name : '',\r\n      status : true,\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.taskEdit)   \r\n    {\r\n      this.setState({\r\n        id : this.props.taskEdit.id,\r\n        name : this.props.taskEdit.name,\r\n        status : this.props.taskEdit.status\r\n      });\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps){\r\n    if(nextProps && nextProps.taskEdit)   \r\n    {\r\n      this.setState({\r\n        id : nextProps.taskEdit.id,\r\n        name : nextProps.taskEdit.name,\r\n        status : nextProps.taskEdit.status\r\n      });\r\n    }else if(nextProps.taskEdit === null)\r\n    {     \r\n      this.setState({\r\n        id : '',\r\n        name : '',\r\n        status : true,\r\n      });\r\n    }    \r\n  }\r\n  \r\n  onHandleChange = (e) => {\r\n    var target = e.target;\r\n    var name = target.name;\r\n    var value = target.type === 'checkbox' ? target.checked : target.value;\r\n    if(name === 'status') {\r\n      value = target.value === 'true' ? true : false;\r\n    }\r\n    this.setState({\r\n      [name] : value\r\n    });\r\n  }\r\n\r\n  onHandleClose = () => {\r\n    this.props.isCloseForm();\r\n  } \r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddObj(this.state);\r\n    this.props.onClose()\r\n  }\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      name : '',\r\n      status : true,\r\n    });\r\n  }\r\n\r\n    render() {\r\n\r\n        // do thêm không có id , sửa có id nên sử dụng id để so sánh\r\n        var { id } = this.state;\r\n        return (\r\n            <div className=\"panel panel-warning\">\r\n              <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">              \r\n                  { id !== '' ? 'Cập nhật công việc' : 'Thêm công việc' } \r\n                  <span \r\n                    className=\"fal fa-times-circle text-right\" \r\n                    onClick = { this.onHandleClose }\r\n                  >\r\n\r\n                  </span>\r\n                </h3>\r\n              </div>\r\n              <div className=\"panel-body\">                   \r\n                <form onSubmit = { this.onSubmit }>                    \r\n                  <div className=\"form-group\" >\r\n                    <label>Tên </label>\r\n                    <input \r\n                      type=\"text\" \r\n                      className=\"form-control\"\r\n                      value = {this.state.name}\r\n                      name = \"name\"\r\n                      onChange = { this.onHandleChange }\r\n                      \r\n                    />\r\n                    <br />\r\n                    <label>Trạng Thái </label>                         \r\n                    <select \r\n                      className=\"form-control\" \r\n                      value = { this.state.status }\r\n                      name = \"status\"\r\n                      onChange = { this.onHandleChange }\r\n                    >\r\n                      \r\n                      <option value={ true }>Kích Hoạt</option>\r\n                      <option value={ false }>Ẩn</option>\r\n                    \r\n                    </select>                 \r\n                  </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\"> \r\n                      <span className=\"fa fa-plus mr-5\"></span>\r\n                      { id !== '' ? 'Sửa' : 'Thêm' } \r\n                    </button>&nbsp;\r\n                    <button type=\"reset\" className=\"btn btn-danger\" onClick = { this.onClear }>\r\n                      <span className=\"fa fa-window-close mr-5\"></span>\r\n                      Hủy bỏ\r\n                    </button>\r\n                </form>                   \r\n              </div>\r\n            </div>\r\n        );       \r\n    }\r\n}\r\n\r\nexport default TaskFormAdd;\r\n","import React, { Component } from 'react';\r\n\r\nclass TaskItem extends Component {\r\n\r\n    onUpdateStatus = () => {\r\n        this.props.onUpdateStatus(this.props.tasks.id);\r\n    }\r\n\r\n    onDeleteStatus = () => {\r\n        this.props.onDeleteStatus(this.props.tasks.id);\r\n    }\r\n\r\n    onClose = () => {\r\n        this.props.onClose();\r\n    }\r\n\r\n    onEdit = () => {\r\n        this.props.onEdit(this.props.tasks.id);\r\n    }\r\n\r\n    render() {\r\n\r\n        var { tasks , index } = this.props;\r\n        \r\n        return (\r\n            <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{tasks.name}</td>\r\n                <td>\r\n                    <span className={ tasks.status === true \r\n                    ?  'label label-success' : 'label label-danger'}\r\n                    onClick = { this.onUpdateStatus } \r\n                    >\r\n                    \r\n                    { tasks.status === true ? 'Kích Hoạt' : 'Ẩn'}\r\n                    \r\n                    </span>\r\n                </td>\r\n                <td>\r\n                    <button \r\n                        type=\"submit\" \r\n                        className=\"btn btn-primary\"\r\n                        onClick = { this.onEdit }\r\n                    >\r\n                        \r\n                        Sửa                  \r\n                    </button>\r\n                    \r\n                    &nbsp;\r\n                    \r\n                    <button \r\n                            type=\"reset\" \r\n                            className=\"btn btn-danger\" \r\n                            onClick = { this.onDeleteStatus }\r\n                            \r\n                    >\r\n                        Xóa\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n \r\n}\r\n\r\nexport default TaskItem;\r\n","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem'\r\n\r\nclass TaskList extends Component { \r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterName : '' ,\r\n            filterStatus : -1, // -1 : all , 1 : kích hoạt  , 0 : ẩn\r\n        }\r\n    }\r\n    \r\n    onChange = (e) => {\r\n        var target = e.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.props.onFilter(\r\n            name === 'filterName' ? value : this.state.filterName,\r\n            name === 'filterStatus' ? value : this.state.filterStatus\r\n        )\r\n        this.setState({\r\n            [name] : value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        \r\n        var { tasks } = this.props;\r\n         \r\n        var element =  tasks.map((task , index) => {         \r\n            return <TaskItem   \r\n            key = { task.id }\r\n            index = { index } \r\n            tasks = { task }\r\n            onUpdateStatus = { this.props.onUpdateStatus }   \r\n            onDeleteStatus = { this.props.onDeleteStatus }\r\n            onEdit = { this.props.onEdit }\r\n                 \r\n        />\r\n        }) \r\n        \r\n        return (\r\n            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">                  \r\n                <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th className=\"text-center\">STT</th>\r\n                        <th className=\"text-center\">Tên</th>\r\n                        <th className=\"text-center\">Trạng Thái</th>\r\n                        <th className=\"text-center\">Hành Động</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>\r\n                                \r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name = \"filterName\"\r\n                                    value = { this.state.filterName }\r\n                                    onChange = { this.onChange }\r\n                                />\r\n                                \r\n                            </td>\r\n                            <td>\r\n                                <select \r\n                                    className=\"form-control\" \r\n                                    name = \"filterStatus\"\r\n                                    value = { this.state.filterStatus }\r\n                                    onChange = { this.onChange }\r\n                                >\r\n                                    <option value={1}>Kích Hoạt</option>\r\n                                    <option value={0}>Ẩn</option>\r\n                                    <option value={-1}>Tất cả</option>\r\n                                </select>\r\n                            </td>\r\n\r\n                            <td></td>\r\n                            \r\n                        </tr>\r\n                        \r\n                        { element }\r\n                    \r\n                    </tbody>\r\n                </table>      \r\n            </div>\r\n        );\r\n    }\r\n \r\n}\r\n\r\nexport default TaskList;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword : '' ,\r\n        }\r\n    }\r\n\r\n    onSearch = (e) => {\r\n        var target = e.target;\r\n        var name = target.name;\r\n        var value = target.value;      \r\n        this.setState({\r\n            [name] : value\r\n        })\r\n        console.log(this.state);         \r\n    }\r\n\r\n    onBtnSearch = () => {\r\n        this.props.onSearch(this.state.keyword);\r\n    }\r\n    \r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">                     \r\n            <div className=\"input-group\">\r\n                \r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    placeholder = \"Nhập từ khóa...\"\r\n                    name = \"keyword\"\r\n                    value = { this.state.keyword }                  \r\n                    onChange = { this.onSearch }\r\n                />\r\n                \r\n                <span className=\"input-group-btn\">\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick = { this.onBtnSearch }>\r\n                        <span className=\"fa fa-search mr-5\"></span>\r\n                        Tìm\r\n                    </button>\r\n                </span>\r\n                \r\n            </div>              \r\n          </div>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Sort extends Component {\r\n\r\n    // UNSAFE_componentWillReceiveProps(nextProps){\r\n    //     console.log(nextProps);     \r\n    // }\r\n\r\n    onClick = (sortBy , sortValue) => {\r\n        this.props.onSort(sortBy , sortValue);     \r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                  <div className=\"dropdown\">\r\n                      <button \r\n                          type=\"button\" \r\n                          className=\"btn btn-primary dropdown-toggle\" id=\"dropdownMenu1\" \r\n                          data-toggle=\"dropdown\" \r\n                          aria-haspopup=\"true\"\r\n                          aria-expanded=\"true\"\r\n                      >\r\n                      \r\n                      Sắp Xếp\r\n                      \r\n                      <span className=\"fas fa-caret-down ml-5\"></span>\r\n                      </button>\r\n                      <ul \r\n                          className=\"dropdown-menu dropdown-menu-left\" aria-labelledby=\"dropdownMenu1\"\r\n                      >\r\n                      <li onClick = { () => this.onClick('name' , 1) }>\r\n                        <a \r\n                            role=\"button\"\r\n                            className = { \r\n                                (this.props.sortBy === 'name' \r\n                                && this.props.sortValue === 1 \r\n                                ? 'sort_selected' : '') }                  \r\n                        >\r\n                            <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                              Tên A-Z\r\n                            </span>\r\n                        </a>\r\n                      </li>\r\n                      <li onClick = { () => this.onClick('name' , -1) }>\r\n                        <a \r\n                            role=\"button\" \r\n                            className = { \r\n                                (this.props.sortBy === 'name' \r\n                                && this.props.sortValue === -1\r\n                                ? 'sort_selected' : '') }\r\n                        >\r\n                          <span className=\"fa fa-sort-asc pr-5\">Tên Z-A</span>\r\n                        </a>\r\n                      </li>\r\n                      <li role=\"separator\" className = \"divider\">\r\n\r\n                      </li>\r\n                      <li onClick = { () => this.onClick('status' , 1) }>\r\n                        <a \r\n                            role=\"button\"\r\n                            className = { \r\n                                (this.props.sortBy === 'status' \r\n                                && this.props.sortValue === 1\r\n                                ? 'sort_selected' : '') }  \r\n                        >\r\n                            Trạng Thái Kích Hoạt\r\n                        </a>\r\n                      </li>\r\n                      <li onClick = { () => this.onClick('status' , -1) }>\r\n                        <a \r\n                            role=\"button\"\r\n                            className = { \r\n                                (this.props.sortBy === 'status' \r\n                                && this.props.sortValue === -1\r\n                                ? 'sort_selected' : '') }                      \r\n                        >\r\n                            Trạng Thái Ẩn\r\n                        </a>\r\n                      </li>\r\n                      </ul>\r\n                  </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sort;\r\n","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\nclass SearchnSort extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className = \"_SeachnSort\">\r\n                <Search onSearch = { this.props.onSearch }/>\r\n                \r\n                <Sort \r\n                    onSort = { this.props.onSort }\r\n                    sortBy = { this.props.sortBy }\r\n                    sortValue = { this.props.sortValue }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchnSort;\r\n","import React, { Component } from 'react';\r\n\r\nclass AddEvent extends Component {\r\n\r\n    onOpenEvent = () => {\r\n        this.props.isActiveEvent()\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                <button type=\"reset\" className=\"btn btn-primary\" id=\"btn1\" onClick = { this.onOpenEvent }>\r\n                    <span className=\"fa fa-plus mr-5\" ></span>\r\n                    Thêm Công Việc\r\n                </button>              \r\n            </div>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\nexport default AddEvent;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport TaskFormAdd from './components/TaskFormAdd';\nimport TaskList from './components/TaskList';\nimport SearchnSort from './components/SearchnSort';\nimport AddEvent from './components/AddEvent';\nimport _ from 'lodash';\n\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks : [],\n      isActive : false,\n      taskEdit : null,\n      filter : {\n        name : '',\n        status : -1,\n      },\n      keyword : '',\n      sortBy : 'name',\n      sortValue : 1,\n    }\n  }\n\n  componentDidMount(){\n    if(localStorage && localStorage.getItem('tasks'))\n    {\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n    }\n    this.setState({\n      tasks : tasks\n    });\n  }\n\n  onToggle = () => {\n    if(this.state.isActive && this.state.taskEdit !== null)\n    {\n      this.setState({\n        isActive : true,\n        taskEdit : null,  \n      });\n    }else{\n      this.setState({\n        isActive : !this.state.isActive,\n        taskEdit : null,    \n      });\n    }\n    \n  }\n\n  onClose = () => {\n    this.setState({\n      isActive : false,\n    });\n  }\n\n  onShowForm = () => {\n    this.setState({\n      isActive : true,\n    });\n  }\n\n  onAdd = (data) => {\n    var { tasks } = this.state;\n    // Kiểm tra \n    if(data.id === ''){\n      data.id = this.generateID();\n      tasks.push(data);\n    }else{\n      var index = this.findIndex(data.id);\n      tasks[index] = data;\n    }\n    this.setState({\n      tasks : tasks,\n      taskEdit : null,\n    });\n    localStorage.setItem('tasks',JSON.stringify(tasks));\n  }\n\n  // Data = () => {\n  //     var task = [\n  //       {\n  //         id : this.generate(),\n  //         name : 'Học lập trình',\n  //         status : false,\n  //       },\n  //       {\n  //         id : this.generate(),\n  //         name : 'Đi bơi',\n  //         status : true,\n  //       },\n  //       {\n  //         id : this.generate(),\n  //         name : 'Học',\n  //         status : true,\n  //       },\n  //     ];\n  //     // khi bấm vào button 'Generate Data' thì sẽ thực hiện công việc lưu vào state\n  //     this.setState({\n  //       tasks : task,\n  //     }); \n  //     localStorage.setItem('tasks', JSON.stringify(task))  // localStorage nên chuyển dữ liệu lưu trữ thành String thay vì Object => Sử dụng JSON\n  //   }\n\n  s4() {\n    return Math.random().toString(36).substring(7);\n  }\n\n  generateID(){\n    return this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4();\n  }\n\n  onUpdateStatus = (id) => {\n    console.log(id);\n    const { tasks } = this.state;\n    const elmtTask = tasks.map(task => {\n      if(task.id === id){\n        task.status = !task.status;\n      }\n      return task;\n    })\n    this.setState({\n      tasks : elmtTask\n    });\n    localStorage.setItem('tasks',JSON.stringify(tasks));\n  }\n\n  findIndex = (id) => {\n     // lấy ds các tasks\n    var { tasks } = this.state;\n    var result = -1;\n    tasks.forEach((task , index) => {\n      if(task.id === id){\n        result = index;\n      }\n    });\n      return result;    \n  }\n\n  onDeleteStatus = (id) => {\n    console.log(id);\n    const { tasks } = this.state;\n    // var index = this.findIndex(id);\n    var index = _.findIndex(tasks , (task) => {\n      return task.id === id\n    });\n    if(index !== -1){\n      tasks.splice(index , 1);\n      this.setState({\n        tasks : tasks\n      });     \n    }\n    localStorage.setItem('tasks',JSON.stringify(tasks));\n    this.onClose();\n  }\n\n  onEdit = (id) => {\n    const { tasks } = this.state;\n    var index = this.findIndex(id);\n    var taskEdit = tasks[index];\n    this.setState({\n      taskEdit : taskEdit,\n    });\n    this.onShowForm();\n  }\n\n  onFilter = (filterName , filterStatus) => {\n    console.log(filterName + '-' + filterStatus);\n    filterStatus = +filterStatus;\n    this.setState({\n      filter : {\n        name : filterName.toLowerCase(),\n        status : filterStatus,\n      }\n    })\n  }\n\n  onSearch = (keyword) => {\n    console.log(keyword);\n    this.setState ({\n      keyword : keyword.toLowerCase()\n    })\n  }\n\n  onSort =async (sortBy , sortValue) => {   \n    await this.setState({\n      sortBy : sortBy,\n      sortValue : sortValue\n    });\n    console.log(this.state.sortBy , '-' , this.state.sortValue);    \n  }\n  \n  render() {\n\n    var { \n        tasks , \n        isActive , \n        taskEdit , \n        filter , \n        keyword , \n        sortBy, \n        sortValue \n      } \n      = this.state;   \n\n    if(filter.name)\n    {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(filter.name) !== -1\n      });\n    }\n    // !== null , !== undifined , !== 0\n    tasks = tasks.filter(task => {\n      if(filter.status === -1){\n        return task;\n      }else{\n          return task.status === (filter.status !== 0 ? true : false)    \n      }\n    });\n\n    if(keyword)\n    {\n      // tasks = tasks.filter(task => {\n      //   if(task.name.toLowerCase().indexOf(keyword) !== -1)\n      //   {\n      //     return task;\n      //   }\n      // });\n      // console.log(tasks);\n      tasks = _.filter(tasks , (task) => {\n        return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1\n      })   \n    }\n\n    if(sortBy === 'name'){\n      tasks.sort((a , b) => {\n        if(a.name > b.name) return sortValue\n        else if (a.name < b.name ) return -sortValue;\n        else return 0;\n      });\n    }else{\n      tasks.sort((a , b) => {\n        if(a.status > b.status) return -sortValue\n        else if (a.status < b.status ) return sortValue;\n        else return 0;\n      });\n    }\n    \n    var elmTask = isActive ? <TaskFormAdd \n                isCloseForm = { this.onClose } \n                onAddObj = { this.onAdd } \n                onClose = {this.onClose}\n                taskEdit = { taskEdit }\n                /> : '';\n    \n    return (\n\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"text-center\"><h1>QUẢN LÝ DỰ ÁN</h1></div>\n            <hr/>\n            <div className = { isActive ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' }>\n              \n              { elmTask }\n              \n            </div>\n            <div className= { isActive ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' \n                                      : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n                <AddEvent isActiveEvent = { this.onToggle } />\n                \n                <div className=\"row mb-15\">\n                  <SearchnSort \n                      onSearch = { this.onSearch }\n                      onSort = { this.onSort }\n                      sortBy = { sortBy }\n                      sortValue = { sortValue }\n                  />  \n                </div>\n                \n                <div className=\"row\">\n                  <TaskList \n                      tasks = { tasks } \n                      onUpdateStatus = { this.onUpdateStatus } \n                      onDeleteStatus = { this.onDeleteStatus }\n                      onEdit = { this.onEdit }\n                      onFilter = { this.onFilter }\n                  />\n                </div>\n              </div>\n            </div>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}